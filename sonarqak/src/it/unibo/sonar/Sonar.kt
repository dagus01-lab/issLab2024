/* Generated by AN DISI Unibo */ 
package it.unibo.sonar

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class Sonar ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outmagenta("$name started")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t00",targetState="handle_sonar_start",cond=whenDispatch("sonarstart"))
					transition(edgeName="t01",targetState="handle_sonar_stop",cond=whenDispatch("sonarstop"))
				}	 
				state("handle_sonar_start") { //this:State
					action { //it:State
						CommUtils.outmagenta("sonar on")
						 Runtime.getRuntime().exec("python3 sonar.py")  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t02",targetState="handle_sonar_start",cond=whenDispatch("sonarstart"))
					transition(edgeName="t03",targetState="handle_sonar_stop",cond=whenDispatch("sonarstop"))
				}	 
				state("handle_sonar_stop") { //this:State
					action { //it:State
						CommUtils.outmagenta("sonar off")
						 Runtime.getRuntime().exec("kill -9 `ps axu | grep sonar.py | awk '{print $2}' | head -1")  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t04",targetState="handle_sonar_start",cond=whenDispatch("sonarstart"))
					transition(edgeName="t05",targetState="handle_sonar_stop",cond=whenDispatch("sonarstop"))
				}	 
			}
		}
} 
