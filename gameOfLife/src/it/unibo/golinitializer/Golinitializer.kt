/* Generated by AN DISI Unibo */ 
package it.unibo.golinitializer

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023
//Sept2024
import org.slf4j.Logger
import org.slf4j.LoggerFactory 
import org.json.simple.parser.JSONParser
import org.json.simple.JSONObject


//User imports JAN2024
import main.resources.GridSupport

class Golinitializer ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		
				var cellsNum = 0
				var readyCells = 0
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outyellow("$name | STARTS")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="createTheGame", cond=doswitch() )
				}	 
				state("createTheGame") { //this:State
					action { //it:State
						
									cellsNum = GridSupport.initGame("gol_config.json", myself)
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="waitingCellsToBeReady", cond=doswitch() )
				}	 
				state("waitingCellsToBeReady") { //this:State
					action { //it:State
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t03",targetState="handleCellReady",cond=whenDispatch("cellReady"))
				}	 
				state("handleCellReady") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("cellReady(M)"), Term.createTerm("cellReady(N)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								var cellName = payloadArg(0) 
								CommUtils.outgreen("$name | cell $cellName ready!")
								readyCells += 1 
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="startTheGame", cond=doswitchGuarded({readyCells == cellsNum 
					}) )
					transition( edgeName="goto",targetState="waitingCellsToBeReady", cond=doswitchGuarded({! (readyCells == cellsNum 
					) }) )
				}	 
				state("startTheGame") { //this:State
					action { //it:State
						CommUtils.outgreen("$name | game ready to be started")
						emit("gameReady", "gameReady(1)" ) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
} 
