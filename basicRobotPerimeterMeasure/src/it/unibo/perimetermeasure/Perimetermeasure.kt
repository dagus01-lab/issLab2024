/* Generated by AN DISI Unibo */ 
package it.unibo.perimetermeasure

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class Perimetermeasure ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "ss0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		
				var TotalPerimeter = 0	
		return { //this:ActionBasciFsm
				state("ss0") { //this:State
					action { //it:State
						delay(3000) 
						CommUtils.outyellow("$name in ${currentState.stateName} | $currentMsg | ${Thread.currentThread().getName()} n=${Thread.activeCount()}")
						 	   
						observeResource("localhost","8020","ctxbasicrobot","basicrobot","stepDone")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="wait", cond=doswitch() )
				}	 
				state("wait") { //this:State
					action { //it:State
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t025",targetState="handleStartMeasure",cond=whenDispatch("startMeasure"))
					transition(edgeName="t026",targetState="updatePerimeter",cond=whenDispatch("stepDone"))
					transition(edgeName="t027",targetState="sendPerimeter",cond=whenRequest("getPerimeter"))
				}	 
				state("handleStartMeasure") { //this:State
					action { //it:State
						TotalPerimeter=0 
						CommUtils.outblack("Perimeter measure started")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="wait", cond=doswitch() )
				}	 
				state("updatePerimeter") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("stepDone(X)"), Term.createTerm("stepDone(TIME)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 TotalPerimeter += payloadArg(0).toInt()  
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="wait", cond=doswitch() )
				}	 
				state("sendPerimeter") { //this:State
					action { //it:State
						answer("getPerimeter", "perimeter", "perimeter($TotalPerimeter)"   )  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="wait", cond=doswitch() )
				}	 
			}
		}
} 
